<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classgr_1_1lpwan_1_1dsss__spreading__bb" kind="class" language="C++" prot="public">
    <compoundname>gr::lpwan::dsss_spreading_bb</compoundname>
    <basecompoundref prot="public" virt="virtual">sync_interpolator</basecompoundref>
    <derivedcompoundref refid="classgr_1_1lpwan_1_1dsss__spreading__bb__impl" prot="public" virt="non-virtual">gr::lpwan::dsss_spreading_bb_impl</derivedcompoundref>
    <includes refid="dsss__spreading__bb_8h" local="no">dsss_spreading_bb.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classgr_1_1lpwan_1_1dsss__spreading__bb_1a1b6d0aef0dd73bdf332558d5465d9a4b" prot="public" static="no">
        <type>boost::shared_ptr&lt; <ref refid="classgr_1_1lpwan_1_1dsss__spreading__bb" kindref="compound">dsss_spreading_bb</ref> &gt;</type>
        <definition>typedef boost::shared_ptr&lt;dsss_spreading_bb&gt; gr::lpwan::dsss_spreading_bb::sptr</definition>
        <argsstring></argsstring>
        <name>sptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/victorguipont/Developpement-informatique/GNU-radio/gr-lpwan/include/lpwan/dsss_spreading_bb.h" line="42" column="1" bodyfile="/Users/victorguipont/Developpement-informatique/GNU-radio/gr-lpwan/include/lpwan/dsss_spreading_bb.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classgr_1_1lpwan_1_1dsss__spreading__bb_1a928d248b141b17a5b026550d24cf673f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classgr_1_1lpwan_1_1dsss__spreading__bb_1a1b6d0aef0dd73bdf332558d5465d9a4b" kindref="member">sptr</ref></type>
        <definition>static sptr gr::lpwan::dsss_spreading_bb::make</definition>
        <argsstring>(std::string len_tag, int spread_factor, int seed, bool reset_per_symbol, int ovsf_code_index, int ovsf_log_spread_factor)</argsstring>
        <name>make</name>
        <param>
          <type>std::string</type>
          <declname>len_tag</declname>
        </param>
        <param>
          <type>int</type>
          <declname>spread_factor</declname>
        </param>
        <param>
          <type>int</type>
          <declname>seed</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>reset_per_symbol</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ovsf_code_index</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ovsf_log_spread_factor</declname>
        </param>
        <briefdescription>
<para>Return a shared_ptr to a new instance of <ref refid="classgr_1_1lpwan_1_1dsss__spreading__bb" kindref="compound">lpwan::dsss_spreading_bb</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>Spreads the incoming samples with the configured code. This block behaves like a tagged stream block, although it is an interpolator, because the output size of one packet could be very big. (big buffer, latency)</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>len_tag</parametername>
</parameternamelist>
<parameterdescription>
<para>length tag key </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>spread_factor</parametername>
</parameternamelist>
<parameterdescription>
<para>spreading factor </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>seed</parametername>
</parameternamelist>
<parameterdescription>
<para>goldcode seed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>reset_per_symbol</parametername>
</parameternamelist>
<parameterdescription>
<para>reset the goldcode after each symbol / after spread_factor input samples </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ovsf_code_index</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ovsf_log_spread_factor</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/victorguipont/Developpement-informatique/GNU-radio/gr-lpwan/include/lpwan/dsss_spreading_bb.h" line="59" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Spreads the already upsampled/repeated data with the goldcode. </para>    </briefdescription>
    <detaileddescription>
<para>Input and output as unpacked bytes. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="149">
        <label>gr::lpwan::dsss_spreading_bb</label>
        <link refid="classgr_1_1lpwan_1_1dsss__spreading__bb"/>
        <childnode refid="150" relation="public-inheritance">
        </childnode>
      </node>
      <node id="151">
        <label>gr::lpwan::dsss_spreading_bb_impl</label>
        <link refid="classgr_1_1lpwan_1_1dsss__spreading__bb__impl"/>
        <childnode refid="149" relation="public-inheritance">
        </childnode>
      </node>
      <node id="150">
        <label>gr::sync_interpolator</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="152">
        <label>gr::lpwan::dsss_spreading_bb</label>
        <link refid="classgr_1_1lpwan_1_1dsss__spreading__bb"/>
        <childnode refid="153" relation="public-inheritance">
        </childnode>
      </node>
      <node id="153">
        <label>gr::sync_interpolator</label>
      </node>
    </collaborationgraph>
    <location file="/Users/victorguipont/Developpement-informatique/GNU-radio/gr-lpwan/include/lpwan/dsss_spreading_bb.h" line="40" column="1" bodyfile="/Users/victorguipont/Developpement-informatique/GNU-radio/gr-lpwan/include/lpwan/dsss_spreading_bb.h" bodystart="39" bodyend="60"/>
    <listofallmembers>
      <member refid="classgr_1_1lpwan_1_1dsss__spreading__bb_1a928d248b141b17a5b026550d24cf673f" prot="public" virt="non-virtual"><scope>gr::lpwan::dsss_spreading_bb</scope><name>make</name></member>
      <member refid="classgr_1_1lpwan_1_1dsss__spreading__bb_1a1b6d0aef0dd73bdf332558d5465d9a4b" prot="public" virt="non-virtual"><scope>gr::lpwan::dsss_spreading_bb</scope><name>sptr</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
